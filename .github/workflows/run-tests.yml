# Copyright      2021  Xiaomi Corp.       (author: Fangjun Kuang)

# See ../../LICENSE for clarification regarding multiple authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Run tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  pypi:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        gcc: ["5"]
        torch: ["1.8.1"]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install GCC ${{ matrix.gcc }}
        run: |
          sudo apt-get install -y gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
          echo "CC=/usr/bin/gcc-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "CXX=/usr/bin/g++-${{ matrix.gcc }}" >> $GITHUB_ENV

      - name: Install PyTorch ${{ matrix.torch }}
        shell: bash
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install wheel twine typing_extensions
          python3 -m pip install bs4 requests tqdm
          python3 -m pip install torch==${{ matrix.torch }}

          python3 -c "import torch; print('torch version:', torch.__version__)"

      - name: Build
        shell: bash
        run: |
          mkdir build_release
          cd build_release
          make -j

      - name: Run tests
        shell: bash
        run: |
          cd build_release
          ctest -R py --output-on-failure
